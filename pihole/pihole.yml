apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - secretName: pihole
    hosts:
    - my.domain.com
  rules:
  - host: my.domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: http
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: http
  labels:
    app: pihole
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
  selector:
    app: pihole
---
apiVersion: v1
kind: Service
metadata:
  name: tcp
  labels:
    app: pihole
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - name: dns
    protocol: TCP
    port: 53
  selector:
    app: pihole
---
apiVersion: v1
kind: Service
metadata:
  name: udp
  labels:
    app: pihole
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - name: dns
    protocol: UDP
    port: 53
  - name: dhcp
    protocol: UDP
    port: 67
  selector:
    app: pihole
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
  name: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
      - env:
        - name: PIHOLE_DNS_
          valueFrom:
            configMapKeyRef:
              name: pihole
              key: pihole_dns_
        - name: TEMPERATUREUNIT
          valueFrom:
            configMapKeyRef:
              name: pihole
              key: temperatureunit
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: pihole
              key: tz
        - name: VIRTUAL_HOST
          valueFrom:
            configMapKeyRef:
              name: pihole
              key: virtual_host
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: pihole-webpassword
              key: webpassword
        image: pihole/pihole:v5.8.1
        imagePullPolicy: IfNotPresent
        name: pihole
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: ssl
          protocol: TCP
        - containerPort: 53
          name: dns
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 67
          name: dhcp
          protocol: UDP
        volumeMounts:
        - mountPath: /etc/pihole
          name: config
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: pihole
  name: config
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

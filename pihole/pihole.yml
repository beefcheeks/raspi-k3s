apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - secretName: pihole
    hosts:
    - my.domain.com
  rules:
  - host: my.domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: http
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: http
  labels:
    app: pihole
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
  selector:
    app: pihole
---
apiVersion: v1
kind: Service
metadata:
  name: dns-tcp
  labels:
    app: pihole
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - name: dns
    protocol: TCP
    port: 53
  selector:
    app: pihole
---
apiVersion: v1
kind: Service
metadata:
  name: dns-udp
  labels:
    app: pihole
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - name: dns
    protocol: UDP
    port: 53
  selector:
    app: pihole
---
apiVersion: v1
kind: Service
metadata:
  name: dhcp
  labels:
    app: pihole
spec:
  ports:
  - name: dhcp
    protocol: UDP
    port: 67
  selector:
    app: pihole
---
# Use a deployment otherwise your DNS will be down when attempting to restart
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
  name: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      # 999 pihole user permissions needed to read/write files on hostPath volumes
      securityContext:
        fsGroup: 999
      containers:
      - name: pihole
        image: pihole/pihole:2022.10
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        env:
        - name: PIHOLE_DNS_
          valueFrom:
            configMapKeyRef:
              name: pihole
              key: pihole_dns_
        - name: TEMPERATUREUNIT
          valueFrom:
            configMapKeyRef:
              name: pihole
              key: temperatureunit
              optional: true
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: pihole
              key: tz
              optional: true
        - name: VIRTUAL_HOST
          valueFrom:
            configMapKeyRef:
              name: pihole
              key: virtual_host
              optional: true
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: pihole-webpassword
              key: webpassword
              optional: true
        - name: DHCP_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: dhcp
              key: dhcp_active
              optional: true
        - name: DHCP_ROUTER
          valueFrom:
            configMapKeyRef:
              name: dhcp
              key: dhcp_router
              optional: true
        - name: DHCP_START
          valueFrom:
            configMapKeyRef:
              name: dhcp
              key: dhcp_start
              optional: true
        - name: DHCP_END
          valueFrom:
            configMapKeyRef:
              name: dhcp
              key: dhcp_end
              optional: true
        - name: DHCP_rapid_commit
          valueFrom:
            configMapKeyRef:
              name: dhcp
              key: dhcp_rapid_commit
              optional: true
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: ssl
          protocol: TCP
        - containerPort: 53
          name: dns
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 67
          name: dhcp
          protocol: UDP
        volumeMounts:
        - name: config
          mountPath: /etc/pihole
        - name: dns-config
          mountPath: /etc/dnsmasq.d/03-pihole-dhcp-dns.conf
          subPath:  03-pihole-dhcp-dns.conf
        - name: log-lighttpd
          mountPath: /var/log/lighttpd
        - name: log-pihole
          mountPath: /var/log/pihole
        - name: no-ip-dhcp
          mountPath: /etc/dnsmasq.d/05-pihole-no-ip-dhcp.conf
          subPath: 05-pihole-no-ip-dhcp.conf
        - name: static-dhcp
          mountPath: /etc/dnsmasq.d/04-pihole-static-dhcp.conf
          subPath: 04-pihole-static-dhcp.conf
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: config
      - name: dns-config
        configMap:
          name: dhcp-files
          optional: true
          items:
          - key: dns_config
            path: 03-pihole-dhcp-dns.conf
      # Host paths are terrible, but there isn't an easier way to get the logs out of the container
      # These host paths are scoped to designated directories to reduce security risk
      # /var/log is automatically picked up by many kubernetes logging agents, including logdna/mezmo
      - name: log-lighttpd
        hostPath:
          path: /var/log/lighttpd
          type: DirectoryOrCreate
      - name: log-pihole
        hostPath:
          path: /var/log/pihole
          type: DirectoryOrCreate
      - name: no-ip-dhcp
        configMap:
          name: dhcp-files
          optional: true
          items:
          - key: no_ip
            path: 05-pihole-no-ip-dhcp.conf
      - name: static-dhcp
        configMap:
          name: dhcp-files
          optional: true
          items:
          - key: static_entries
            path: 04-pihole-static-dhcp.conf
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: pihole
  name: config
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

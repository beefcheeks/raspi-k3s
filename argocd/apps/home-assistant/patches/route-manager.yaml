# Patch home-assistant StatefulSet to use route manager needed for thread border route advertisement
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ignored
spec:
  template:
    spec:
      # Ensure route advertisement works
      containers:
        - name: route-manager
          image: apearson/radvd:latest
          securityContext:
            privileged: true
          command:
          - /bin/sh
          args:
          - -c
          - |
            #!/bin/sh

            # This script listens for IPv6 route advertisments and adds the corresponding routes
            # Raspbian Lite 64-bit Buster does not respect the accept_ra flag for any interface
            # This allows a given operating system to be able to route requests to IPv6 border routers

            # Sample radvdump output below:

            ## radvd configuration generated by radvdump 2.18
            ## based on Router Advertisement from fe80::182a:2ecd:1272:d53b
            ## received by interface eth0
            #
            # interface eth0
            # {
            #   // interface settings
            #
            # 	prefix fd9a:9a2c:1ec4:4dbe::/64
            # 	{
            #       // prefix settings
            # 	}; # End of prefix definition


            # 	route fd49:e143:177::/64
            # 	{
            #        // route settings
            # 	}; # End of route definition
            # }; # End of interface definition

            radvdump | {
                while IFS= read -r line
                do
                    if echo $line | grep -q '# based on Router Advertisement from '
                    then
                        GATEWAY=$(echo $line | awk '{print $7}')
                    elif echo $line | grep -q '# received by interface '
                    then
                        INTERFACE=$(echo $line | awk '{print $5}')
                    elif echo $line | grep -q 'route f'
                    then
                        ROUTE=$(echo $line | awk '{print $2}')
                    fi

                    # Ensure gateway, interface, and route vars exist
                    if [ ! -z "$GATEWAY" ]  && [ ! -z "$ROUTE" ] && [ ! -z "$INTERFACE" ]
                    then
                        # Only set EXISTING_ROUTE if route actually exists
                        EXISTING_ROUTE=$(ip -6 route get $ROUTE | grep -v 'Network unreachable')
                        # Only add new route if (i) it doesn't exist or (ii) it is stale
                        if [ ! -z "$EXISTING_ROUTE" ]
                        then
                            # Check for stale gateway
                            OLD_GATEWAY=$(echo $EXISTING_ROUTE | awk '{print $5}')
                            if [ $OLD_GATEWAY != $GATEWAY ]
                            then
                                echo "Stale gateway found: $OLD_GATEWAY"
                                DEL_OLD_ROUTE=true
                            fi
                            # Check for stale interface
                            OLD_INTERFACE=$(echo $EXISTING_ROUTE | awk '{print $7}')
                            if [ $OLD_INTERFACE != $INTERFACE ]
                            then
                                echo "Stale interface found: $OLD_INTERFACE"
                                DEL_OLD_ROUTE=true
                            fi
                            # Delete route
                            if [ ! -z "$DEL_OLD_ROUTE" ]
                            then
                                echo 'Deleting stale route...'
                                ip -6 route del $ROUTE
                                ADD_NEW_ROUTE=true
                            else
                                echo "Route $ROUTE is already correctly configured, skipping..."
                            fi
                        else
                            ADD_NEW_ROUTE=true
                        fi
                        # Actually add new route
                        if [ ! -z "$ADD_NEW_ROUTE" ]
                        then
                            echo "Adding route $ROUTE via $GATEWAY for interface $INTERFACE..."
                            ip route add $ROUTE via $GATEWAY dev $INTERFACE
                        fi
                        # Unset variables for next loop
                        unset ADD_NEW_ROUTE DEL_OLD_ROUTE GATEWAY INTERFACE ROUTE
                    fi
                done
            }
